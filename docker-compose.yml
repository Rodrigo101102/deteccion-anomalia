version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: anomalia_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - anomalia_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - anomalia_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - anomalia_network
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/anomalia_detection
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  celery:
    build: .
    command: celery -A anomalia_detection worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - anomalia_network
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/anomalia_detection
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A anomalia_detection beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - anomalia_network
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/anomalia_detection
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  flower:
    build: .
    command: celery -A anomalia_detection flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - celery
    networks:
      - anomalia_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - web
    networks:
      - anomalia_network
    restart: unless-stopped

volumes:
  postgres_data:
  media_volume:
  static_volume:

networks:
  anomalia_network:
    driver: bridge